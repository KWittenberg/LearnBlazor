@page "/bindproperty"

@* One Way Data Binding *@
<h3>Product - One Way Data Binding</h3>

Name: @Product.Name
<br />
Price: @Product.Price
<br />
IsActive: @Product.IsActive


@* Two Way Data Binding *@
<h3 class="mt-5">Product - Two Way Data Binding</h3>

Name: @Product.Name
<br />
Input Price:
<input type="number" @bind="@Product.Price" @bind:event="oninput" />
<br />
Price: @Product.Price
<br />
<br />
IsActive:
<input type="checkbox" @bind="@Product.IsActive" />
<br />
IsActive: @Product.IsActive
<br />
This Product is: @(Product.IsActive ? "Active" : "InActive")
<br />
<br />


Product Properties Key:
<select @bind="SelectedProperties">
    @foreach (var prop in Product.ProductProperties)
    {
        <option value="@prop.Key">@prop.Key</option>
    }
</select>
<br />

Selected Properties: @SelectedProperties

@if (!string.IsNullOrEmpty(SelectedProperties))
{
    <p>Selected Value: @Product.ProductProperties.FirstOrDefault(x => x.Key == SelectedProperties).Value</p>
}



<div class="row">
    <div class="col-6 border p-3">
        Name: @Product.Name
        <br />
        Input Price:
        <input type="number" @bind="@Product.Price" @bind:event="oninput" />
        <br />
        Price: @Product.Price
        <br />
        <br />
        IsActive:
        <input type="checkbox" @bind="@Product.IsActive" />
        <br />
        IsActive: @Product.IsActive
        <br />
        This Product is: @(Product.IsActive ? "Active" : "InActive")
        <br />
        <br />


        Product Properties Key:
        <select @bind="SelectedProperties">
            @foreach (var prop in Product.ProductProperties)
            {
                <option value="@prop.Key">@prop.Key</option>
            }
        </select>
        <br />

        Selected Properties: @SelectedProperties

        @if (!string.IsNullOrEmpty(SelectedProperties))
        {
            <p>Selected Value: @Product.ProductProperties.FirstOrDefault(x => x.Key == SelectedProperties).Value</p>
        }
    </div>
</div>


@code {
    private string SelectedProperties = string.Empty;

    Product Product = new()
        {
            Id = 1,
            Name = "Product 1",
            Price = 0,
            IsActive = true,
            ProductProperties = new List<ProductProperty>()
            {
                new ProductProperty{ Id = 1, Key ="Color", Value = "Red"},
                new ProductProperty{ Id = 2, Key ="Size", Value = "20g"},
                new ProductProperty{ Id = 3, Key ="Flavor", Value = "Chocolate"}
            }
        };



    List<Product> ProductList = new();

    protected override void OnInitialized()
    {
        ProductList.Add(new()
            {
                Id = 1,
                Name = "Rudina",
                Price = 39.99,
                IsActive = true,
                ProductProperties = new List<ProductProperty>()
            {
                new ProductProperty{ Id = 1, Key ="Cover", Value = "Hard"},
                new ProductProperty{ Id = 2, Key ="Size", Value = "B5"},
                new ProductProperty{ Id = 3, Key ="Pages", Value = "250"}
            }
            });

        ProductList.Add(new()
            {
                Id = 1,
                Name = "Puvarija",
                Price = 34.99,
                IsActive = true,
                ProductProperties = new List<ProductProperty>()
            {
                new ProductProperty{ Id = 1, Key ="Cover", Value = "Soft"},
                new ProductProperty{ Id = 2, Key ="Size", Value = "B5"},
                new ProductProperty{ Id = 3, Key ="Pages", Value = "300"}
            }
            });
    }
}